claim_caliphate_cb = {
	group = conquest

	combine_into_one = yes

	allowed_for_character = {
		has_government = caliphate_government
		exists = var:cal_authority
	}

	allowed_for_character_display_regardless = {
		AND = {
			exists = var:cal_authority
			custom_description = {
				text = claim_authority_requirement
				subject = scope:attacker
				scope:attacker.var:cal_authority.compare_value >= scope:defender.var:cal_authority.compare_value
			}
		}
	}

	allowed_against_character = {
		has_government = caliphate_government
		scope:defender.faith = scope:attacker.faith
		scope:defender.faith.religious_head = scope:defender
	}

	target_titles = none
	ignore_effect = change_title_holder

	should_invalidate = {
		NOT = {
			OR = {
				scope:defender.faith = scope:attacker.faith
				scope:defender.faith.religious_head = scope:defender
			}
		}
	}

	on_invalidated_desc = msg_county_conquest_war_invalidated_message
	on_invalidated = {
		hidden_effect = {
			if = {
				limit = {
					scope:attacker = {
						has_character_flag = husayn
					}
				}
				scope:attacker = {
					set_character_faith = faith:shia
					every_sub_realm_county = {
						set_county_faith = faith:shia
					}
						create_title_and_vassal_change = {
							type = usurped
							save_scope_as = change
							add_claim_on_loss = yes
						}
						title:d_shiite = {
							change_title_holder_include_vassals = {
								holder = scope:attacker
								change = scope:change
							}
						}
						resolve_title_and_vassal_change = scope:change
				
				}
				scope:war = {
					every_war_attacker = {
						set_character_faith = faith:shia
						every_sub_realm_county = {
							set_county_faith = faith:shia
						}
					}
				}
				every_ruler = {
					limit = {
						has_faith = faith:united_islam
					}
					set_character_faith = faith:sunni
				}
				every_county = {
					limit = {
						faith = faith:united_islam
					}
					set_county_faith = faith:sunni
				}
				destroy_title = title:e_rashidun
				scope:defender = {
					set_character_faith = faith:sunni
					create_title_and_vassal_change = {
						type = usurped
						save_scope_as = change
						add_claim_on_loss = yes
					}
					title:d_sunni = {
						change_title_holder_include_vassals = {
							holder = scope:attacker
							change = scope:change
						}
					}
					resolve_title_and_vassal_change = scope:change
				}
				faith:sunni = {
					remove_doctrine = unavailable_doctrine
				}
				faith:shia = {
					remove_doctrine = unavailable_doctrine
				}
				faith:united_islam = {
					add_doctrine = unavailable_doctrine
				}
			}
		}
		
	}

	cost = {
		piety = {
			value = 0
			if = {
				limit = {
					scope:defender.faith = scope:attacker.faith
				}
				add = {
					value = medium_piety_value
					desc = CB_SAME_FAITH_COST
				}
			}
			if = {
				limit = {
					scope:attacker = { has_government = tribal_government }
				}
				multiply = {
					value = 0.5
					desc = CB_TRIBAL_COST
				}
			}

			#Innovation Piety Discounts
			if = {
				limit = {
					scope:attacker = {
						culture = {
							has_innovation = innovation_reconquista
						}
					}
				}
				multiply = {
					value = 0.9
					desc = CB_RECONQUISTA_COST
				}
			}

			if = {
				limit = {
					scope:attacker = {
						has_government = nomadic_government
					}
				}
				multiply = {
					value = 0.3
				}
			}

			# Bellum Justum Perk
			if = {
				limit = {
					scope:attacker = {
						has_perk = bellum_justum_perk
					}
				}
				multiply = {
					add = bellum_justum_discount_percentage
					divide = 100
					desc = CB_ATTACKER_BELLUM_JUSTUM
				}
			}

			# Dynasty Warfare Perk
			if = {
				limit = {
					scope:attacker = {
						has_dynasty = yes
						dynasty = {
							has_dynasty_perk = warfare_legacy_2
						}
					}
				}
				multiply = {
					value = warfare_legacy_2_discount
					desc = CB_ATTACKER_DYNASTY_WARFARE
				}
			}

			# Vassal contract in-realm cost reduction
			if = {
				limit = {
					scope:attacker = {
						is_independent_ruler = no
						vassal_contract_has_flag = vassal_contract_war_override
						liege = scope:defender.liege
					}
				}
				multiply = {
					value = war_declaration_rights_allowed_cost_reduction
					desc = "CB_ATTACKER_VASSAL_CONTRACT"
				}
			}

			if = {
				limit = {
					has_game_rule = no_cost_casus_belli_costs
				}
				multiply = {
					value = 0
					desc = CB_GAME_RULE_NO_COST
				}
			}
		}
		prestige = {
			value = 0
			if = {
				limit = {
					NOT = { scope:defender.faith = scope:attacker.faith }
				}
				add = {
					value = medium_prestige_value
					desc = CB_COST_DIFFERENT_FAITH
				}
			}
			if = {
				limit = {
					scope:attacker = { has_government = tribal_government }
				}
				multiply = {
					value = 0.5
					desc = CB_TRIBAL_COST
				}
			}

			#Innovation Prestige Discounts
			if = {
				limit = {
					scope:attacker = {
						culture = {
							has_innovation = innovation_chronicle_writing
							has_innovation = innovation_land_grants
							has_innovation = innovation_rightful_ownership
						}
					}
				}
				multiply = {
					value = 0.7
					desc = CB_ATTACKER_INNOVATIONS
				}
			}
			else_if = {
				limit = {
					scope:attacker = {
						culture = {
							OR = {
								has_innovation = innovation_chronicle_writing
								has_innovation = innovation_land_grants
							}
							OR = {
								has_innovation = innovation_land_grants
								has_innovation = innovation_rightful_ownership
							}
							OR = {
								has_innovation = innovation_chronicle_writing
								has_innovation = innovation_rightful_ownership
							}
						}
					}
				}
				multiply = {
					value = 0.8
					desc = CB_ATTACKER_INNOVATIONS
				}
			}
			else_if = {
				limit = {
					scope:attacker = {
						culture = {
							OR = {
								has_innovation = innovation_chronicle_writing
								has_innovation = innovation_land_grants
								has_innovation = innovation_rightful_ownership
							}
						}
					}
				}
				multiply = {
					value = 0.9
					desc = CB_ATTACKER_INNOVATIONS
				}
			}

			if = {
				limit = {
					scope:attacker = {
						has_government = nomadic_government
					}
				}
				multiply = {
					value = 0.3
				}
			}

			# Bellum Justum Perk
			if = {
				limit = {
					scope:attacker = {
						has_perk = bellum_justum_perk
					}
				}
				multiply = {
					add = bellum_justum_discount_percentage
					divide = 100
					desc = CB_ATTACKER_BELLUM_JUSTUM
				}
			}

			# Dynasty Warfare Perk
			if = {
				limit = {
					scope:attacker = {
						has_dynasty = yes
						dynasty = {
							has_dynasty_perk = warfare_legacy_2
						}
					}
				}
				multiply = {
					value = warfare_legacy_2_discount
					desc = CB_ATTACKER_DYNASTY_WARFARE
				}
			}

			# Vassal contract in-realm cost reduction
			if = {
				limit = {
					scope:attacker = {
						is_independent_ruler = no
						vassal_contract_has_flag = vassal_contract_war_override
						liege = scope:defender.liege
					}
				}
				multiply = {
					value = war_declaration_rights_allowed_cost_reduction
					desc = "CB_ATTACKER_VASSAL_CONTRACT"
				}
			}

			if = {
				limit = {
					has_game_rule = no_cost_casus_belli_costs
				}
				multiply = {
					value = 0
					desc = CB_GAME_RULE_NO_COST
				}
			}
		}
	}

	on_declaration = {
		on_declared_war = yes
		if = {
			limit = {
				scope:attacker = {
					has_character_flag = husayn
				}
			}
			scope:attacker = {
				spawn_army = {
					name = "Muslim Mujahideen"
					levies = 2000
					men_at_arms = {
						type = light_horsemen
						stacks = 10
					}
					men_at_arms = {
						type = light_footmen
						stacks = 10
					}
					location = scope:attacker.capital_province
				}
			}
			scope:defender = {
				every_vassal = {
					trigger_event = {
						id = islam.0008
					}
				}
			}

		}

	}

	on_victory_desc = {
		first_valid = {
			triggered_desc = {
				trigger = { scope:attacker = { is_local_player = yes } }
				desc = caliphate_cb_victory_desc
			}
			desc = caliphate_cb_victory_desc
		}
	}

	on_victory = {
		create_title_and_vassal_change = {
			type = usurped
			save_scope_as = change
			add_claim_on_loss = yes
		}
		scope:defender = {
			every_held_title = {
				limit = {
					scope:defender.faith.religious_head_title = THIS
				}
				change_title_holder_include_vassals = {
					holder = scope:attacker
					change = scope:change
				}
			}
		}
		resolve_title_and_vassal_change = scope:change

		scope:attacker = {
			add_prestige_experience = 500

			change_variable = {
				name = cal_authority
				add = 10
			}
			clamp_variable = {
				name = cal_authority
				max = 0
				min = 100
			}
		}

		add_from_contribution_defenders = {
			prestige = medium_prestige_value
			opinion = {
				modifier = contributed_in_war
			}
		}

		add_from_contribution_attackers = {
			prestige = medium_prestige_value
			opinion = {
				modifier = contributed_in_war
			}
		}

		if = {
			limit = {
				scope:attacker = {
					has_character_flag = husayn
				}
			}
			scope:attacker = {
				change_government = caliphate_government
			}
			title:e_rashidun = {
				add_title_law = rashidun_elective_succession_law
			}
		}

		add_truce_attacker_victory_effect = yes
	}

	on_white_peace_desc = {
		first_valid = {
			triggered_desc = {
				trigger = { scope:defender = { is_local_player = yes } }
				desc = caliphate_cb_white_peace_desc
			}
			desc = caliphate_cb_white_peace_desc
		}
	}

	on_white_peace = {
		scope:attacker = { show_pow_release_message_effect = yes }
		# Prestige loss for the attacker
		scope:attacker = {
			add_prestige = {
				value = minor_prestige_value
				multiply = -1.0
			}
			stress_impact = {
 				ambitious = medium_stress_impact_gain
 				arrogant = medium_stress_impact_gain
 			}
		}

		# Prestige for the attacker's war allies
		add_from_contribution_attackers = {
			prestige = minor_prestige_value
			opinion = {
				modifier = contributed_in_war
			}
		}

		# Prestige for the defender's war allies
		add_from_contribution_defenders = {
			prestige = minor_prestige_value
			opinion = {
				modifier = contributed_in_war
			}
		}

		scope:defender = {
			stress_impact = {
 				arrogant = medium_stress_impact_gain
 			}
		}

		add_truce_white_peace_effect = yes
	}

	on_defeat_desc = {
		first_valid = {
			triggered_desc = {
				trigger = { scope:defender = { is_local_player = yes } }
				desc = caliphate_cb_defeat_desc
			}
			triggered_desc = {
				trigger = {
					scope:attacker = {
						is_local_player = yes
						has_targeting_faction = yes
					}
				}
				desc = caliphate_cb_defeat_desc
			}
			desc = caliphate_cb_defeat_desc
		}
	}

	on_defeat = {
		scope:attacker = { show_pow_release_message_effect = yes }


		scope:attacker = {
			pay_short_term_gold = {
				gold = 3
				target = scope:defender
				yearly_income = yes
			}
			add_prestige = {
				value = major_prestige_value
				multiply = -1.0
			}
			change_variable = {
				name = cal_authority
				subtract = 10
			}
			clamp_variable = {
				name = cal_authority
				max = 0
				min = 100
			}
		}

		add_from_contribution_attackers = {
			prestige = medium_prestige_value
			opinion = {
				modifier = contributed_in_war
			}
		}

		scope:defender = {
			add_prestige = major_prestige_value
			
		}

		add_from_contribution_defenders = {
			prestige = medium_prestige_value
			opinion = {
				modifier = contributed_in_war
			}
		}

		add_truce_attacker_defeat_effect = yes

		scope:attacker = {
			save_temporary_scope_as = loser
		}
		on_lost_aggression_war_discontent_loss = yes
		hidden_effect = {
			if = {
				limit = {
					scope:attacker = {
						has_character_flag = husayn
					}
				}
				scope:attacker = {
					set_character_faith = faith:shia
					every_sub_realm_county = {
						set_county_faith = faith:shia
					}
					create_title_and_vassal_change = {
						type = created
						save_scope_as = change
						add_claim_on_loss = yes
					}
					title:d_shiite = {
						change_title_holder_include_vassals = {
							holder = scope:attacker
							change = scope:change
						}
					}
					resolve_title_and_vassal_change = scope:change
					destroy_title = title:e_rashidun
			
				}
				scope:war = {
					every_war_attacker = {
						set_character_faith = faith:shia
						every_sub_realm_county = {
							set_county_faith = faith:shia
						}
					}
				}
				every_ruler = {
					limit = {
						has_faith = faith:united_islam
					}
					set_character_faith = faith:sunni
				}
				every_county = {
					limit = {
						faith = faith:united_islam
					}
					set_county_faith = faith:sunni
				}
				scope:defender = {
					set_character_faith = faith:sunni
					create_title_and_vassal_change = {
						type = created
						save_scope_as = change
						add_claim_on_loss = yes
					}
					title:d_sunni = {
						change_title_holder_include_vassals = {
							holder = scope:defender
							change = scope:change
						}
					}
					resolve_title_and_vassal_change = scope:change
				}
				hidden_effect = {
					faith:sunni = {
						remove_doctrine = unavailable_doctrine
					}
					faith:shia = {
						remove_doctrine = unavailable_doctrine
					}
					faith:united_islam = {
						add_doctrine = unavailable_doctrine
					}
				}
			}
		}
	}

	transfer_behavior = transfer

	on_primary_attacker_death = inherit
	on_primary_defender_death = inherit

	attacker_allies_inherit = yes
	defender_allies_inherit = yes

	war_name = "CALIPHATE_WAR_NAME"
	war_name_base = "CALIPHATE_WAR_NAME_BASE"
	cb_name = "CALIPHATE_CB_NAME"

	interface_priority = 100
}

holy_jihad_cb = {
	group = religious 

	combine_into_one = yes
	should_show_war_goal_subview = yes
	mutually_exclusive_titles = { always = yes }

	allowed_for_character = {
		has_government = caliphate_government
		has_religion = religion:islam_religion
	}

	allowed_for_character_display_regardless = {
		AND = {
			exists = var:cal_authority
			custom_description = {
				text = jihad_authority_requirement
				subject = scope:attacker
				scope:attacker.var:cal_authority.compare_value >= 50
			}
		}
	}

	allowed_against_character = {
		NOT = { scope:defender.religion = scope:attacker.religion }
	}
	target_titles = neighbor_land
	target_title_tier = kingdom
	ignore_effect = change_title_holder
	target_de_jure_regions_above = yes

	ai_score_mult = {
		value = 1

		add = {
			every_in_list = {
				list = target_titles
				if = {
					limit = { 
						tier = tier_kingdom
						OR = {
							de_jure_liege = title:e_persia
							de_jure_liege = title:e_byzantium
							de_jure_liege = title:e_rashidun
							de_jure_liege = title:e_arabia
						}	
					}
					add = 1000
				}
			}
		}
	}

	should_invalidate = {
		scope:defender.religion = scope:attacker.religion
	}

	on_invalidated_desc = msg_caliphate_war_invalidated_message
	on_invalidated = {
	}

	cost = {
		piety = {
			value = 500

			if = {
				limit = {
					scope:attacker = {
						has_perk = bellum_justum_perk
					}
				}
				multiply = {
					add = bellum_justum_discount_percentage
					divide = 100
					desc = CB_ATTACKER_BELLUM_JUSTUM
				}
			}

			# Dynasty Warfare Perk
			if = {
				limit = {
					scope:attacker = {
						has_dynasty = yes
						dynasty = {
							has_dynasty_perk = warfare_legacy_2
						}
					}
				}
				multiply = {
					value = warfare_legacy_2_discount
					desc = CB_ATTACKER_DYNASTY_WARFARE
				}
			}
		}
		prestige = {
			add = {
				value = 200
				desc = CB_BASE_COST
			}

			#Innovation Prestige Discounts
			if = {
				limit = {
					scope:attacker = {
						culture = {
							has_innovation = innovation_chronicle_writing
							has_innovation = innovation_land_grants
							has_innovation = innovation_rightful_ownership
						}
					}
				}
				multiply = {
					value = 0.7
					desc = CB_ATTACKER_INNOVATIONS
				}
			}
			else_if = {
				limit = {
					scope:attacker = {
						culture = {
							OR = {
								has_innovation = innovation_chronicle_writing
								has_innovation = innovation_land_grants
							}
							OR = {
								has_innovation = innovation_land_grants
								has_innovation = innovation_rightful_ownership
							}
							OR = {
								has_innovation = innovation_chronicle_writing
								has_innovation = innovation_rightful_ownership
							}
						}
					}
				}
				multiply = {
					value = 0.8
					desc = CB_ATTACKER_INNOVATIONS
				}
			}
			else_if = {
				limit = {
					scope:attacker = {
						culture = {
							OR = {
								has_innovation = innovation_chronicle_writing
								has_innovation = innovation_land_grants
								has_innovation = innovation_rightful_ownership
							}
						}
					}
				}
				multiply = {
					value = 0.9
					desc = CB_ATTACKER_INNOVATIONS
				}
			}

			# Bellum Justum Perk
			if = {
				limit = {
					scope:attacker = {
						has_perk = bellum_justum_perk
					}
				}
				multiply = {
					add = bellum_justum_discount_percentage
					divide = 100
					desc = CB_ATTACKER_BELLUM_JUSTUM
				}
			}

			# Dynasty Warfare Perk
			if = {
				limit = {
					scope:attacker = {
						has_dynasty = yes
						dynasty = {
							has_dynasty_perk = warfare_legacy_2
						}
					}
				}
				multiply = {
					value = warfare_legacy_2_discount
					desc = CB_ATTACKER_DYNASTY_WARFARE
				}
			}

			# Vassal contract in-realm cost reduction
			if = {
				limit = {
					scope:attacker = {
						is_independent_ruler = no
						vassal_contract_has_flag = vassal_contract_war_override
						liege = scope:defender.liege
					}
				}
				multiply = {
					value = war_declaration_rights_allowed_cost_reduction
					desc = "CB_ATTACKER_VASSAL_CONTRACT"
				}
			}
			
			if = {
				limit = {
					has_game_rule = no_cost_casus_belli_costs
				}
				multiply = {
					value = 0
					desc = CB_GAME_RULE_NO_COST
				}
			}
		}
	}

	on_declaration = {
		on_declared_war = yes
		scope:defender = {
			trigger_event = islam.0004
		}

		scope:attacker = {
			set_variable = {
				name = tmp_army_jihad
				value = 0
			}
			every_realm_county = {
				limit = {
					faith = scope:attacker.faith
				}
				scope:attacker = {
					change_variable = {
						name = tmp_army_jihad
						add = 1
					}
				}
			}
			spawn_army = {
				name = "Muslim Mujahideen"
				levies = 3000
				men_at_arms = {
					type = light_footmen
					stacks = scope:attacker.var:tmp_army_jihad
				}
				war = scope:war
				location = capital_province
			}
			remove_variable = tmp_army_jihad
		}
	}	

	on_victory_desc = {
		first_valid = {
			triggered_desc = {
				trigger = { scope:attacker = { is_local_player = yes } }
				desc = invasion_war_victory_desc_attacker
			}
			desc = invasion_war_victory_desc
		}
	}
	
	on_victory = {
		scope:attacker = { show_pow_release_message_effect = yes }
		create_title_and_vassal_change = {
			type = conquest
			save_scope_as = change
			add_claim_on_loss = yes
		}
		
		setup_invasion_cb = {
			titles = target_titles
			attacker = scope:attacker
			defender = scope:defender
			change = scope:change
			take_occupied = yes
		}
		resolve_title_and_vassal_change = scope:change

		# Attacker gets Prestige Experience, Defender loses Prestige, all other participants gain Prestige based on their war contribution.
		modify_all_participants_fame_values = {
			WINNER = scope:attacker
			LOSER = scope:defender
			FAME_BASE = scope:cb_prestige_factor # Set by 'setup_invasion_cb'
			IS_RELIGIOUS_WAR = no
			WINNER_FAME_SCALE = 10
			LOSER_FAME_SCALE = -10
			WINNER_ALLY_FAME_SCALE = 10
			LOSER_ALLY_FAME_SCALE = 10
		}

		# Truce
		add_truce_attacker_victory_effect = yes

		# FP1: note the victory for future memorialisation via stele (if applicable).
		scope:attacker = { fp1_remember_recent_conquest_victory_effect = yes }

		scope:attacker.faith = {
			change_fervor = 5
		}
		scope:defender.faith = {
			change_fervor = -5
		}

		if = {
			limit = {
				scope:attacker = {
					primary_title = title:e_rashidun
				}
			}
			every_in_list = {
				list = target_titles
				limit = {
					tier = tier_kingdom
				}
				set_de_jure_liege_title = title:e_rashidun

				every_in_de_jure_hierarchy = {
					limit = {
						tier = tier_county
					}
					random_list = {
						80 = {
							set_county_faith = scope:attacker.faith
						}
						20 = {

						}
					}
				}
			}
		}
	}

	on_white_peace_desc = {
		first_valid = {
			triggered_desc = {
				trigger = { scope:defender = { is_local_player = yes } }
				desc = invasion_war_white_peace_desc_defender
			}
			desc = invasion_war_white_peace_desc
		}
	}
	
	on_white_peace = {
		scope:attacker = { show_pow_release_message_effect = yes }

		# Prestige for the attacker's war allies
		add_from_contribution_attackers = {
			prestige = major_prestige_value
			opinion = {
				modifier = contributed_in_war
			}
		}

		# Prestige for the defender's war allies
		add_from_contribution_defenders = {
			prestige = major_prestige_value
			opinion = {
				modifier = contributed_in_war
			}
		}

		# Truce
		add_truce_white_peace_effect = yes

		scope:attacker = {
			add_prestige = mongol_invasion_cb_prestige_white_peace
			stress_impact = {
				ambitious = medium_stress_impact_gain
				arrogant = medium_stress_impact_gain
			}
		}

		scope:defender = {
			stress_impact = {
				arrogant = medium_stress_impact_gain
			}
		}

		scope:attacker.faith = {
			change_fervor = -2
		}
	}

	on_defeat_desc = {
		first_valid = {
			triggered_desc = {
				trigger = { scope:defender = { is_local_player = yes } }
				desc = invasion_war_white_peace_desc_defender
			}
			desc = invasion_war_white_peace_desc
		}
	}
	
	on_defeat = {
		scope:attacker = { show_pow_release_message_effect = yes }

		# Prestige loss for the attacker
		scope:attacker = {
			pay_short_term_gold = {
				gold = 5
				target = scope:defender
				yearly_income = yes
			}
			add_prestige = {
				value = massive_prestige_value
				multiply = -1.0
			}
		}
		
		setup_invasion_cb = {
			titles = target_titles
			attacker = scope:attacker
			defender = scope:defender
			claimant = scope:claimant
			victory = no
		}

		# Attacker loses Prestige, all other war participants gain Prestige (Defender gains full prestige, all allies on both sides gain based on war contribution).
		modify_all_participants_fame_values = {
			WINNER = scope:defender
			LOSER = scope:attacker
			FAME_BASE = scope:cb_prestige_factor # Set by 'setup_claim_cb'
			IS_RELIGIOUS_WAR = no
			WINNER_FAME_SCALE = 10
			LOSER_FAME_SCALE = -10
			WINNER_ALLY_FAME_SCALE = 10
			LOSER_ALLY_FAME_SCALE = 10
		}
	
		add_truce_attacker_defeat_effect = yes
		
		scope:attacker = {
			save_temporary_scope_as = loser
		}
		on_lost_aggression_war_discontent_loss = yes

		scope:attacker.faith = {
			change_fervor = -5
		}
		scope:defender.faith = {
			change_fervor = 5
		}
	}

	transfer_behavior = transfer
	
	on_primary_attacker_death = inherit
	on_primary_defender_death = inherit
	
	attacker_allies_inherit = yes
	defender_allies_inherit = yes
	
	war_name = "JIHAD_WAR_NAME"
	war_name_base = "JIHAD_WAR_NAME_BASE"
	cb_name = "JIHAD_CB_NAME"
	
	interface_priority = 90

	use_de_jure_wargoal_only = yes
	
	attacker_wargoal_percentage = 0.8
}


ridda_faction_war = {
	group = civil_war
	ai_only_against_liege = yes
	target_titles = independence_domain
	allowed_for_character = {
		scope:attacker = {
			is_leading_faction_type = ridda_faction
		}
	}

	allowed_against_character = {
		scope:attacker = {
			liege = scope:defender
		}
	}

	target_de_jure_regions_above = yes

	valid_to_start = {

	}

	on_declaration = {
		scope:attacker = {
			hidden_effect = { fp1_remove_humsac_offended_counties_effect = yes }
		}
	}

	on_victory_desc = {
		first_valid = {
			triggered_desc = {
				trigger = { # Desc for only one player attacker
					scope:attacker = {
						is_local_player = yes
						joined_faction = {
							any_faction_member = {
								count = 1
							}
						}
					}
				}
				desc = independence_war_victory_desc_local_player_attacker_alone
			}
			triggered_desc = { # Desc for only one attacker, player defender
				trigger = {
					scope:defender = {
						is_local_player = yes
					}
					scope:attacker = {
						joined_faction = {
							any_faction_member = {
								count = 1
							}
						}
					}
				}
				desc = independence_war_victory_desc_local_player_defender_attacker_alone
			}
			triggered_desc = { # Desc for player attacker
				trigger = {
					scope:attacker.joined_faction = {
						any_faction_member = { is_local_player = yes }
					}
				}
				desc = independence_war_victory_desc_local_player_attacker
			}
			triggered_desc = { # Desc for player defender
				trigger = { scope:defender = { is_local_player = yes } }
				desc = independence_war_victory_desc_local_player_defender
			}
			desc = independence_war_victory_desc # Desc for a third party involved
		}
		
	}

	on_victory = {
		scope:attacker = { show_pow_release_message_effect = yes }
		create_title_and_vassal_change = {
			type = independency
			save_scope_as = change
		}
		scope:attacker.joined_faction = {
			every_faction_member = {
				set_character_faith = faith:arabic_pagan
				change_liege_or_become_independent = {
					CHANGE = scope:change
					VASSAL = this
				}

				hidden_effect = {
					set_variable = {
						name = independence_war_former_liege
						value = scope:defender
					}
					add_truce_both_ways = {
						character = scope:defender
						days = 1825
						war = root.war
						result = victory
					}
				}
			}
		}
		scope:attacker = {
			add_prestige = medium_prestige_value
		}
		scope:defender = {
			add_prestige = {
				value = medium_prestige_value
				multiply = -1
			}
			if = {
				limit = { has_realm_law = crown_authority_1 }
				add_realm_law = crown_authority_0
			}
			if = {
				limit = { has_realm_law = crown_authority_2 }
				add_realm_law = crown_authority_1
			}
			if = {
				limit = { has_realm_law = crown_authority_3 }
				add_realm_law = crown_authority_2
			}
		}
		resolve_title_and_vassal_change = scope:change

		hidden_effect = {
			scope:attacker = {
				every_realm_county = {
					set_county_faith = faith:arabic_pagan
				}
			}
		}

		set_global_variable = {
			name = ridda_war
			value = yes
		}
	}

	on_white_peace_desc = {
		first_valid = {
			triggered_desc = {
				trigger = { scope:defender = { is_local_player = yes } }
				desc = independence_war_white_peace_defender_desc
			}
			triggered_desc = {
				trigger = {
					scope:attacker.joined_faction = {
						any_faction_member = { is_local_player = yes }
					}
				}
				desc = independence_war_white_peace_attacker_desc
			}
			desc = independence_war_white_peace_desc
		}
		desc = independence_war_white_peace_end_desc
		
	}

	on_white_peace = {
		scope:attacker = { 
			show_pow_release_message_effect = yes 
			stress_impact = {
 				ambitious = medium_stress_impact_gain
 				arrogant = medium_stress_impact_gain
 			}
		}
		hidden_effect = {
			scope:attacker = {
				add_truce_both_ways = {
					character = scope:defender
					days = 1825
					war = root.war
					result = white_peace
				}
				joined_faction = {
					add_faction_discontent = -200
				}
			}
		}

		scope:defender = {
			stress_impact = {
 				arrogant = medium_stress_impact_gain
 			}

			add_character_flag = {
				flag = recent_independence_faction_war
				years = faction_war_white_peace_cooldown
			}
			add_prestige = minor_prestige_value
		}

		on_white_peace_faction_revolt_war = yes

		set_global_variable = {
			name = ridda_war
			value = yes
		}
	}

	on_defeat_desc = {
		first_valid = {
			triggered_desc = {
				trigger = { scope:defender = { is_local_player = yes } }
				desc = independence_defeat_defender_desc
			}
			triggered_desc = {
				trigger = {
					scope:attacker.joined_faction = {
						any_faction_member = { is_local_player = yes }
					}
				}
				desc = independence_defeat_attacker_desc
			}
			desc = player_independence_war_defeat_desc #same loc as for player
		}
		desc = independence_defeat_end_desc
		
	}

	on_defeat = {
		scope:attacker = { show_pow_release_message_effect = yes }
		scope:defender = {
			add_character_flag = {
				flag = recent_independence_faction_war
				years = faction_war_defeat_cooldown
			}
			add_dread = medium_dread_gain
			# Prestige for Defender
			add_prestige = medium_prestige_value
			add_achievement_flag_effect = { FLAG = achievement_know_your_place_flag }
		}

		on_lost_faction_revolt_war = yes

		set_global_variable = {
			name = ridda_war
			value = yes
		}
	}

	on_invalidated_desc = msg_invalidate_war_title

	check_defender_inheritance_validity = no

	on_primary_attacker_death = inherit_faction
	on_primary_defender_death = inherit

	transfer_behavior = transfer

	attacker_allies_inherit = no
	defender_allies_inherit = yes

	war_name = "RIDDA_WAR_NAME"

	interface_priority = 81

	use_de_jure_wargoal_only = yes

	attacker_wargoal_percentage = 1.0
	defender_wargoal_percentage = 0.0 # A single occupation will do
	defender_ticking_warscore_delay = { days = 0 } # No need for a delay here since the defender actually needs to occupy something rather than starting in control

	max_attacker_score_from_battles = 100
	max_defender_score_from_battles = 50

	max_ai_diplo_distance_to_title = 500
}

first_fitna_faction_war = {
	group = civil_war
	ai_only_against_liege = no
	target_titles = claim
	allowed_for_character =	{
		scope:attacker = {
			is_leading_faction_type = claimant_faction
		}
	}

	allowed_against_character = {
		exists = scope:attacker.joined_faction
		scope:attacker = {
			liege = scope:defender
		}
	}

	target_de_jure_regions_above = yes

	valid_to_start = {}

	should_invalidate = {
		always = no
	}

	on_invalidated_desc = msg_invalidate_war_title

	on_declaration = {
		scope:defender = {
			trigger_event = {
				id = islam.0006
				days = 14
			}
		}
	}

	on_victory_desc = {
		desc = claimant_faction_war_victory_desc
		
	}

	on_victory = {
		scope:attacker = { show_pow_release_message_effect = yes }
		hidden_effect = {
			scope:attacker = {
				add_truce_both_ways = {
					character = scope:defender
					days = 1825
					war = root.war
					result = victory
				}
				add_character_flag = first_fitna_ruler
			}
		}

		create_title_and_vassal_change = {
			type = usurped
			save_scope_as = title_change
			add_claim_on_loss = no
		}
		title:e_arabia = {
			change_title_holder = {
				holder = scope:attacker
				change = scope:title_change
			}
		}
		resolve_title_and_vassal_change = scope:title_change

		create_title_and_vassal_change = {
			type = usurped
			save_scope_as = title_change
			add_claim_on_loss = no
		}

		title:e_rashidun = {
			change_title_holder_include_vassals = {
				holder = scope:attacker
				change = scope:title_change
			}
			
		}
		resolve_title_and_vassal_change = scope:title_change

		title:e_rashidun = {
			every_in_de_jure_hierarchy = {
				limit = {
					tier = tier_kingdom
				}
				set_de_jure_liege_title = title:e_arabia
			}
			clear_title_laws = yes
		}
		scope:attacker = {
			change_government = caliphate_government
		}


		set_global_variable = {
			name = first_fitna
			value = yes
		}

	}

	on_white_peace_desc = {
		desc = claimant_faction_war_white_peace_desc
		
	}

	on_white_peace = {
		scope:attacker = {
			show_pow_release_message_effect = yes
			stress_impact = {
 				ambitious = medium_stress_impact_gain
 				arrogant = medium_stress_impact_gain
 			}
		}

		scope:defender = {
			stress_impact = {
 				arrogant = medium_stress_impact_gain
 			}
		}
		on_white_peace_faction_revolt_war = yes

		hidden_effect = {
			scope:attacker = {
				add_truce_both_ways = {
					character = scope:defender
					days = 1825
					war = root.war
					result = white_peace
				}
				if = {
					limit = { exists = joined_faction }
					joined_faction = {
						destroy_faction = yes # Destroy the faction if it wasn't already destroyed automatically.
					}
				}
			}
		}

		set_global_variable = {
			name = first_fitna
			value = yes
		}
	}

	on_defeat_desc = {
		desc = claimant_faction_war_defeat_desc
		
	}

	on_defeat = {
		scope:attacker = { show_pow_release_message_effect = yes }
		on_lost_faction_revolt_war = yes

		scope:defender = {
			add_dread = medium_dread_gain
		}

		set_global_variable = {
			name = first_fitna
			value = yes
		}
	}

	check_attacker_inheritance_validity = no

	on_primary_attacker_death = inherit_faction
	on_primary_defender_death = invalidate

	transfer_behavior = transfer

	attacker_allies_inherit = no
	defender_allies_inherit = yes

	war_name = "FIRST_FITNA_WAR_NAME"

	interface_priority = 80

	attacker_wargoal_percentage = 0.8

	max_attacker_score_from_battles = 50
	max_defender_score_from_battles = 100

	max_ai_diplo_distance_to_title = 500
}