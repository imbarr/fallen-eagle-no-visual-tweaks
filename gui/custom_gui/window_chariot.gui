types chariotwidgets {
    type chariotwindow = window {
            parentanchor = top|right
	        layer = windows_layer
            position = {0 500}
            movable = no
            using = Window_Size_MainTab
            visible = "[GetVariableSystem.Exists('chariot_window')]"
            

            state = {
                name = _hide
                using = Animation_FadeOut_Quick
                using = Sound_WindowHide_Standard
                using = Window_Position_MainTab_Hide
                trigger_when = "[IsRightWindowOpen]"
                alpha = 0
            }
            state = {
                name = _show
                using = Animation_FadeIn_Quick
                using = Sound_WindowShow_Standard
                using = Window_Position_MainTab
                alpha = 1
            }

            background = {
                texture = "gfx/interface/component_tiles/solid_black_label.dds"
                margin_left = -40
                fittype = centercrop
            }
            
    
            margin_widget = {
                size = { 100% 100% }
                margin = { 0 26 }
                margin_right = -20
                
				background = {
					texture = "gfx/interface/component_tiles/tile_window_background_subwindow.dds"
					spriteType = Corneredtiled
					spriteborder = { 18 18 }
					margin = { -23 -17 }
					margin_left = -20
					margin_bottom = 20
					texture_density = 2
		
					modify_texture = {
						name = "overlay"
						texture = "gfx/interface/component_overlay/overlay_effect.dds"
						spriteType = Corneredstretched
						spriteborder = { 0 0 }
						blend_mode = overlay
					}
				}
                vbox = {
                    using = Window_Margins
                    position = {0 -500}

                    header_pattern = {
                        layoutpolicy_horizontal = expanding

                        blockoverride "header_text"
                        {
                            raw_text = "Chariot Racing"
                        }

                        blockoverride "button_close"
                        {
                            onclick = "[GetVariableSystem.Toggle('chariot_window')]"
                        }
                        expand = {}
					}
					background = {
						texture = "gfx/interface/illustrations/chariot.dds"
						margin = { -40 450 }
						fittype = end
						alpha = 0.4
						framesize = { 665 1200 }
                    }
                } 
                
                icon = {
                    texture = "gfx/interface/icons/chariot_banners/blues_banner.dds"
                    position = {30 100}
                    size = {290 116}
                }
                text_single = {
                    raw_text = "[GetGlobalVariable('blue_score').GetValue|0]"
                    default_format = "#high"
                    using = Font_Size_Big
                    position = {58 155}
                }
                text_label_center = {
                    raw_text = "Blues"
                    default_format = "#high"
                    using = Font_Size_Big
                    position = {155 145}
                }
                icon = {
                    texture = "gfx/interface/icons/chariot_banners/greens_banner.dds"
                    position = {320 100}
                    size = {290 116}
                }
                text_label_center = {
                    raw_text = "Greens"
                    default_format = "#high"
                    using = Font_Size_Big
                    position = {430 145}
                }

                text_single = {
                    raw_text = "[GetGlobalVariable('green_score').GetValue|0]"
                    default_format = "#high"
                    using = Font_Size_Big
                    position = {567 155}
                }

                dynamicgridbox = {
                    datamodel = "[GetGlobalList('blue_team')]"
                    position = {110 200}

                    item = {
                        flowcontainer = {
                            direction = vertical
                            datacontext = "[Scope.GetCharacter]"

                            portrait_shoulders = {}

                            text_label_left = {
                                raw_text = "[Character.GetNameNoTooltip]"
                            }
                            text_label_left = {
                                raw_text = "Prowess: [Character.GetProwess]"
                            }
                            
                        }
                    }
                }

                dynamicgridbox = {
                    datamodel = "[GetGlobalList('green_team')]"
                    position = {410 200}

                    item = {
                        flowcontainer = {
                            direction = vertical
                            datacontext = "[Scope.GetCharacter]"

                            portrait_shoulders = {}

                            text_label_left = {
                                raw_text = "[Character.GetNameNoTooltip]"
                            }
                            text_label_left = {
                                raw_text = "Prowess: [Character.GetProwess]"
                            }
                            
                        }
                    }
                }
                button_standard = {
                    position = {95 840}
                    raw_text = "Support The Blues"
                    onclick = "[GetScriptedGui('blue_support').Execute( GuiScope.SetRoot( GetPlayer.MakeScope ).End)]"
					enabled = "[Not( EqualTo_string(GetPlayer.MakeScope.Var( 'team' ).GetFlagName, 'blue') )]"
                }
                button_standard = {
                    position = {405 840}
                    raw_text = "Support The Greens"
                    onclick = "[GetScriptedGui('green_support').Execute( GuiScope.SetRoot( GetPlayer.MakeScope ).End)]"
					enabled = "[Not( EqualTo_string(GetPlayer.MakeScope.Var( 'team' ).GetFlagName, 'green') )]"
                }
            }

    }
}